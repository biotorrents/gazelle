##
# https://github.com/anniemaybytes/manticoresearch
#

common {
	plugin_dir = /usr/local/lib/manticore
}

searchd {
	listen =
	log = /var/log/manticore/searchd.log
	pid_file = /var/run/manticore/searchd.pid
	binlog_path = /var/lib/manticore
}

indexer {
	mem_limit = 1024M # half the hetzner memory
}


##
# database_connection
#

source database_connection {
	type = mysql

	sql_host =
	sql_port =

	sql_db =
	sql_user =
	sql_pass =

	sql_query_pre = set character_set_results=utf8mb4
	sql_query_pre = set names utf8mb4
	sql_query_pre = set session query_cache_type=off
}


##
# torrents_attributes
#

source torrents_attributes : database_connection {
	sql_attr_bigint = size
	sql_attr_string = format
	sql_attr_string = platform
	sql_attr_uint = aligned
	sql_attr_uint = categoryId
	sql_attr_uint = groupId
	sql_attr_uint = leechStatus
	sql_attr_uint = leechers
	sql_attr_uint = seeders
	sql_attr_uint = snatches
	sql_attr_uint = timeAdded
	sql_attr_uint = year
}


##
# torrents_main
#

source torrents_main : torrents_attributes {

	## counter #

	sql_query_pre = set group_concat_max_len = 65535
	sql_query_pre = set @startTime = unix_timestamp()
	sql_query_pre = replace into manticore_counter values ("torrents", @startTime)


	## torrents_group #

	sql_query_pre = truncate manticore_torrents_group
	sql_query_pre = insert into manticore_torrents_group \
		(id, categoryId, title, subject, object, year, \
			workgroup, location, identifier, tagList, groupDescription, picture) \
		select id, category_id, title, subject, object, year, \
			workgroup, location, identifier, tag_list, description, picture \
		from torrents_group \
		where unix_timestamp(timestamp) <= @startTime


	## torrents #

	sql_query_pre = truncate manticore_torrents
	sql_query_pre = insert into manticore_torrents \
		(id, groupId, userId, platform, format, license, \
			scope, version, aligned, infoHash, fileList, size, \
			leechers, seeders, leechStatus, timeAdded, torrentDescription, snatches, archive) \
		select id, groupId, userId, media, container, codec, \
			resolution, version, censored, info_hash, fileList, size, \
			leechers, seeders, freeTorrent, unix_timestamp(time), description, snatched, archive \
		from torrents \
		where unix_timestamp(time) <= @startTime


	## creatorList #

	sql_query_pre = truncate manticore_torrents_group
	sql_query_pre = replace into manticore_torrents_group \
		(id, creatorList) \
		select groupId, group_concat(artists_group.name separator " ") \
		from torrents_artists \
			join artists_group using(artistId) \
		group by torrents_artists.groupId


	## query #

	sql_query = select * from manticore_torrents \
		join manticore_torrents_group on manticore_torrents.groupId = manticore_torrents_group.id

	sql_query_post_index = delete from manticore_torrents_delta \
		where timeAdded <= (select lastTouch from manticore_counter where type = "torrents")
}


index torrents_main {
	source = torrents_main
	path = /var/lib/manticore/data/torrents_main

	min_word_len = 1
	min_stemming_len = 3
	min_infix_len = 2
	html_strip = 1
	expand_keywords = 1
	index_exact_words = 1
	blend_chars = !, ., U+23, ?, U+5B, U+5C, U+5D, U+2C, U+60, U+3B, U+7C, U+7E, ", $, %, ', (, ), *, +, /, :, <, =, >, ^, @, U+3099..U+309F, U+30FB..U+30FF
	blend_mode = trim_none, trim_head, trim_tail, trim_both, trim_all

	# needs to match the file delimiter in Gazelle\Torrent
	phrase_boundary = U+F7
	phrase_boundary_step = 50
}


##
# torrents_delta
#

source torrents_delta : torrents_main {
	sql_query = select * from manticore_torrents_delta \
		where timeAdded > (select lastTouch from manticore_counter where type = "torrents")

	#sql_query_killlist = select id from manticore_torrents_delta
}


index torrents_delta : torrents_main {
	source = torrents_delta
	path = /var/lib/manticore/data/torrents_delta
}


##
# requests_attributes
#

source requests_attributes : database_connection {
	sql_attr_uint = bounty
	sql_attr_uint = categoryId
	sql_attr_uint = fillerId
	sql_attr_uint = lastVote
	sql_attr_uint = timeAdded
	sql_attr_uint = timeFilled
	sql_attr_uint = torrentId
	sql_attr_uint = userId
	sql_attr_uint = visible
	sql_attr_uint = voteCount
}


##
# requests_main
#

source requests_main : requests_attributes {

	## counter #

	sql_query_pre = set group_concat_max_len = 65535
	sql_query_pre = set @startTime = unix_timestamp()
	sql_query_pre = replace into manticore_counter values ("requests", @startTime)


	## requests #

	sql_query_pre = truncate manticore_requests
	sql_query_pre = insert into manticore_requests \
		(id, userId, timeAdded, lastVote, categoryId, title, \
			subject, object, picture, description, identifier, fillerId, \
			torrentId, timeFilled, visible, voteCount, bounty ) \
		select id, requests.userId, unix_timestamp(timeAdded), unix_timestamp(lastVote), categoryId, title, \
				title2, titleJp, image, description, catalogueNumber, fillerId, \
				torrentId, unix_timestamp(timeFilled), visible, count(requests_votes.requestId), sum(requests_votes.bounty) \
		from requests \
			join requests_votes on requests_votes.requestId = requests.id \
		where unix_timestamp(timeAdded) <= @startTime \
		group by requests.id


	## creatorList #

	sql_query_pre = truncate manticore_requests
	sql_query_pre = replace into manticore_requests (id, creatorList) \
		select requestId, group_concat(artists_group.name separator " ") \
		from requests_artists \
			join artists_group on artists_group.artistId = requests_artists.artistId \
		group by requests_artists.requestId


	## tagList #

	sql_query_pre = truncate manticore_requests
	sql_query_pre =replace into manticore_requests (id, tagList) \
		select requests_tags.requestId, replace(tags.name, ".", "_") \
		from requests_tags \
			join tags on tagId = id


	## query #

	sql_query = select * from manticore_requests

	sql_attr_multi = uint voter from query; \
		select requestId, userId from requests_votes

	sql_attr_multi = uint bookmarker from query; \
		select requestId, userId from bookmarks_requests

	sql_query_post_index = delete from manticore_requests_delta \
		where timeAdded <= (select lastTouch from manticore_counter where type = "requests")
}


index requests_main {
	source = requests_main
	path = /var/lib/manticore/data/requests_main

	min_word_len = 1
	min_stemming_len = 3
	min_infix_len = 2
	html_strip = 1
	expand_keywords = 1
	index_exact_words = 1
	blend_chars = !, ., U+23, ?, U+5B, U+5C, U+5D, U+2C, U+60, U+3B, U+7C, U+7E, ", $, %, ', (, ), *, +, /, :, <, =, >, ^, @, U+3099..U+309F, U+30FB..U+30FF
	blend_mode = trim_none, trim_head, trim_tail, trim_both, trim_all
}


##
# requests_delta
#

source requests_delta : requests_main {
	sql_query = select * from manticore_requests_delta \
		where timeAdded > (select lastTouch from manticore_counter where type = "requests")

	#sql_query_killlist = select id from manticore_requests_delta

	sql_attr_multi = uint voter from query; \
		select requestId, userId from requests_votes

	sql_attr_multi = uint bookmarker from query; \
		select requestId, userId from bookmarks_requests
}


index requests_delta : requests_main {
	source = requests_delta
	path = /var/lib/manticore/data/requests_delta
}


##
# collections_attributes
#

# todo


##
# collections_main
#

# todo


##
# collections_delta
#

# todo