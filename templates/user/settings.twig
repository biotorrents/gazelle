{% extends "base.twig" %}

{% block content %}

<div>
  <div class="header">
    <h2>{{ user.core.username }} {{ env.crumb }} Settings</h2>
  </div>

  <form class="edit_form" name="user" id="userform" method="post" autocomplete="off">

{# hidden fields #}
        <input type="hidden" name="action" value="take_edit" />
        <input type="hidden" name="userid" value="{{ user.core.id }}" />
        <input type="hidden" name="auth" value="{{ user.extra.AuthKey }}" />

      {# site appearance #}
      <h3>Site appearance</h3>
      <table class="layout border user_options" id="site_appearance">

        <!-- Stylesheet -->
        <tr id="site_style_tr">
          <th>Stylesheet</th>

          <td>
           <select name="stylesheet" id="stylesheet">
            {% for stylesheet in stylesheets %}
              <option value="{{ stylesheet.id }}" {# {{ (stylesheet.ID == user.extra.StyleID) ?? "selected" }} #}>
                {{ stylesheet.properName }}
              </option>
              {% endfor %} {# for stylesheet in stylesheets #}
            </select>

            {#
            &ensp;
            <a data-toggle-target="#css_gallery" class="brackets">Show gallery</a>
            <div id="css_gallery" class="hidden">
              <?php foreach ($Stylesheets as $Style) { ?>
              <div class="preview_wrapper">
                <div class="preview_image"
                  name="<?=($Style['Name'])?>">
                  <img
                    src="<?=staticServer.'css/preview/thumb_'.$Style['Name'].'.png'?>"
                    alt="<?=$Style['Name']?>" />
                  <p class="preview_name">
                    <label><input type="radio" name="stylesheet_gallery"
                        value="<?=($Style['ID'])?>" />
                      <?=($Style['ProperName'])?></label>
                  </p>
                </div>
              </div>
              <?php } ?>
            </div>
            #}
          </td>
        </tr>


        {# stylesheet additions #}
        {#
        <tr id="style_additions_tr" class="<?=($Stylesheets[$user['StyleID']]['Additions'][0] ?? false) ? '' : 'hidden'?>">

          <th>Stylesheet additions</th>

          <td>
            <?php
          foreach ($Stylesheets as $Style) {

              # Main section
              echo '<section class="style_additions'; # open quote
              echo ($Style['ID'] === $Stylesheets[$user['StyleID']]['ID'])
                ? '"' # close quote
                : ' hidden"'; # hide
              echo ' id="style_additions_' . $Style['Name'] . '">';

              # For each style addition
              $StyleAdditions = explode(';', $Style['Additions']);
              $Select = ['default_font'];
              $Checkbox = [];

              foreach ($StyleAdditions as $i => $Addition) {
                  $Types = explode('=', $Addition);

                  switch ($Types[0]) {
                  case 'select':
                      array_push($Select, $Types[1]);
                      break;

                  case 'checkbox':
                      array_push($Checkbox, $Types[1]);
                      break;

                  default:
                      break;

                  }
              } # foreach $Addition

              # Fix to prevent multiple font entries
              if ($Style['ID'] === $Stylesheets[$user['StyleID']]['ID']) {
                  # Select options, e.g., fonts
                  echo "<select class='style_additions' name='style_additions[]'>";

                  foreach ($Select as $Option) {
                      $Selected = (in_array($Option, $SiteOptions['StyleAdditions'])
                        ? 'selected'
                        : '');
                      echo "<option value='$Option' id='addition_$Option' $Selected>$Option</option>";
                  }
                  echo '</select>';
              }

              # Checkbox options, e.g., pink and haze
              foreach ($Checkbox as $Option) {
                  $Checked = (in_array($Option, $SiteOptions['StyleAdditions'])
                  ? 'checked'
                  : '');

                  echo <<<HTML
                  <input type="checkbox" name="style_additions[]" value="$Option"
                    id="addition_$Option" $Checked />
                  <label for="addition_$Option">$Option</label>
HTML;
              }
              echo '</section>';
          } # foreach $Style
          ?>
          </td>
        </tr>
        #}

        {# external stylesheet uri #}
        <tr id="site_extstyle_tr">
          <th>External stylesheet URI</th>

          <td>
            <input type="text" size="40" name="styleurl" id="styleurl" value="{{ user.extra.StyleURL }}" />
          </td>
        </tr>


        {# profile stats #}
        {# {% if checkPerms("users_mod) %} #}
        <tr id="site_autostats_tr">
          <th>Profile stats</th>

          <td>
          {#
            <label>
              <input type="checkbox" name="autoload_comm_stats" <?Format::selected(
              'AutoloadCommStats',
              1,
              'checked',
              $SiteOptions
          ); ?>
              />
              Automatically fetch the snatch and peer stats on profile pages
            </label>
            #}
          </td>
        </tr>
        {# {% endif %} #}
      </table> {# site appearance #}


{# torrents #}
<h3>Torrents</h3>
      <table class="layout border user_options" id="torrent_settings">

        {# default search type #}
        <tr id="tor_searchtype_tr">
          <th>Default search type</th>

          <td>
            <ul class="options_list nobullet">
              <li>
                <input type="radio" name="searchtype" id="search_type_simple" value="0" <?=(int)$SiteOptions['SearchType']===0 ? ' checked="checked"' : ''?>
                />
                <label for="search_type_simple">Simple</label>
              </li>

              <li>
                <input type="radio" name="searchtype" id="search_type_advanced" value="1" <?=(int)$SiteOptions['SearchType']===1 ? ' checked="checked"' : ''?>
                />
                <label for="search_type_advanced">Advanced</label>
              </li>
            </ul>
          </td>
        </tr>

        {# torrent grouping #}
        <tr id="tor_group_tr">
          <th>Torrent grouping</th>

          <td>
            <div class="option_group">
              <input type="checkbox" name="disablegrouping" id="disablegrouping" <?=$SiteOptions['DisableGrouping2'] === 0 ? ' checked="checked"' : ''?>
              />
              <label for="disablegrouping">Enable torrent grouping</label>
            </div>
          </td>
        </tr>

        {# torrent group display #}
        <tr id="tor_gdisp_search_tr">
          <th>Torrent group display</th>

          <td>
            <div class="option_group">
              <ul class="options_list nobullet">
                <li>
                  <input type="radio" name="torrentgrouping" id="torrent_grouping_open" value="0" <?=$SiteOptions['TorrentGrouping'] === 0 ? ' checked="checked"' : ''?>
                  />
                  <label for="torrent_grouping_open">Open</label>
                </li>

                <li>
                  <input type="radio" name="torrentgrouping" id="torrent_grouping_closed" value="1" <?=$SiteOptions['TorrentGrouping'] === 1 ? ' checked="checked"' : ''?>
                  />
                  <label for="torrent_grouping_closed">Closed</label>
                </li>
              </ul>
            </div>
          </td>
        </tr>

        {# snatched torrents indicator #}
        <tr id="tor_snatched_tr">
          <th>Snatched torrents indicator</th>

          <td>
            <input type="checkbox" name="showsnatched" id="showsnatched" <?=!empty($SiteOptions['ShowSnatched']) ? ' checked="checked"' : ''?>
            />
            <label for="showsnatched">Enable snatched torrents indicator</label>
          </td>
        </tr>

        {# cover art (torrents) #}
        <tr id="tor_cover_tor_tr">
          <th>Cover art (torrents)</th>

          <td>
            <ul class="options_list nobullet">
              <li>
                <input type="hidden" name="coverart" value="" />
                <input type="checkbox" name="coverart" id="coverart" <?=!isset($SiteOptions['CoverArt']) || $SiteOptions['CoverArt'] ? ' checked="checked"' : ''?>
                />
                <label for="coverart">Enable cover artwork</label>
              </li>

              <li>
                <input type="checkbox" name="show_extra_covers" id="show_extra_covers" <?=$SiteOptions['ShowExtraCovers'] ? ' checked="checked"' : ''?>
                />
                <label for="show_extra_covers">Enable additional cover artwork</label>
              </li>
            </ul>
          </td>
        </tr>

        {# cover art (collections) #}
        <tr id="tor_cover_coll_tr">
          <th>Cover art (collections)</th>

          <td>
            <select name="collagecovers" id="collagecovers">
              <option value="10" <?=$SiteOptions['CollageCovers'] === 10 ? ' selected="selected"' : ''?>>10
              </option>

              <option value="25" <?=($SiteOptions['CollageCovers'] === 25 || !isset($SiteOptions['CollageCovers'])) ? ' selected="selected"' : ''?>>25
                (default)</option>

              <option value="50" <?=$SiteOptions['CollageCovers'] === 50 ? ' selected="selected"' : ''?>>50
              </option>

              <option value="100" <?=$SiteOptions['CollageCovers'] === 100 ? ' selected="selected"' : ''?>>100
              </option>

              <option value="1000000" <?=$SiteOptions['CollageCovers'] === 1000000 ? ' selected="selected"' : ''?>>All
              </option>

              <option value="0" <?=($SiteOptions['CollageCovers'] === 0 || (!isset($SiteOptions['CollageCovers']) && $SiteOptions['HideCollage'])) ? ' selected="selected"' : ''?>>None
              </option>
            </select>
            covers per page
          </td>
        </tr>

        {# torrent search filters #}
        <tr id="tor_showfilt_tr">
          <th>Torrent search filters</th>

          <td>
            <ul class="options_list nobullet">
              <li>
                <input type="checkbox" name="showtfilter" id="showtfilter" <?=(!isset($SiteOptions['ShowTorFilter']) || $SiteOptions['ShowTorFilter'] ? ' checked="checked"' : '')?>
                />
                <label for="showtfilter">Display filter controls</label>
              </li>

              <li>
                <input type="checkbox" name="showtags" id="showtags" <?php Format::selected('ShowTags', 1, 'checked', $SiteOptions); ?>
                />
                <label for="showtags">Display official tag filters</label>
              </li>
            </ul>
          </td>
        </tr>
      </table>



      {# community #}
      <h3>Community</h3>
      <table class="layout border user_options" id="community_settings">

{#
        <!-- Posts per page (forums) -->
        <tr id="comm_ppp_tr">
          <td class="label">
            <strong>Posts per page (forums)</strong>
          </td>

          <td>
            <select name="postsperpage" id="postsperpage">
              <option value="25" <?=$SiteOptions['PostsPerPage'] === 25 ? ' selected="selected"' : ''?>>25
                (default)</option>

              <option value="50" <?=$SiteOptions['PostsPerPage'] === 50 ? ' selected="selected"' : ''?>>50
              </option>

              <option value="100" <?=$SiteOptions['PostsPerPage'] === 100 ? ' selected="selected"' : ''?>>100
              </option>
            </select>
            posts per page
          </td>
        </tr>
#}

        {# inbox sorting #}
        <tr id="comm_inbsort_tr">
          <th>Inbox sorting</th>

          <td>
            <input type="checkbox" name="list_unread_pms_first" id="list_unread_pms_first" <?=!empty($SiteOptions['ListUnreadPMsFirst']) ? ' checked="checked"' : ''?>
            />
            <label for="list_unread_pms_first">List unread private messages first</label>
          </td>
        </tr>

        {# avatar display (posts) #}
        <tr id="comm_avatars_tr">
          <th>Avatar display (posts)</th>

          <td>
            <select name="disableavatars" id="disableavatars">
              <option value="1" <?=(int)$SiteOptions['DisableAvatars'] === 1 ? ' selected="selected"' : ''?>>Disable
                avatars</option>
              <option value="0" <?=(int)$SiteOptions['DisableAvatars'] === 0 ? ' selected="selected"' : ''?>>Show
                avatars</option>
            </select>
          </td>
        </tr>

{#
        <!-- Auto-save reply text -->
        <tr id="comm_autosave_tr">
          <td class="label">
            <strong>Auto-save reply text</strong>
          </td>

          <td>
            <input type="checkbox" name="disableautosave" id="disableautosave" <?=!empty($SiteOptions['DisableAutoSave']) ? ' checked="checked"' : ''?>
            />
            <label for="disableautosave">Disable text auto-saving</label>
          </td>
        </tr>
#}

        {# displayed badges #}
        {#
        <tr id="comm_badge_tr">
          <th>Displayed badges</th>

          <td>
            <?php
            $Badges = Badges::get_badges($UserID);
    if (empty($Badges)) {
        ?><span>You have no badges :(</span><?php
    } else {
        $Count = 0;
        foreach ($Badges as $BadgeID => $Displayed) { ?>
            <input type="checkbox" name="badges[]" class="badge_checkbox"
              value="<?=$BadgeID?>" <?=($Displayed) ? "checked " : ""?>/>
            <?=Badges::display_badge($BadgeID, true)?>
            <?php
        $Count++;
            echo ($Count % 8) ? '' : '<br>';
        }
    } ?>
          </td>
        </tr>
        #}
      </table>






      {# notifications #}
      <h3>Notifications</h3>
      <table class="layout border user_options" id="notification_settings">

        {# automatic thread subscriptions #}
        <tr id="notif_autosubscribe_tr">
          <th>Automatic thread subscriptions</th>

          <td>
            <input type="checkbox" name="autosubscribe" id="autosubscribe" <?=!empty($SiteOptions['AutoSubscribe']) ? ' checked="checked"' : ''?>
            />
            <label for="autosubscribe">Enable automatic thread subscriptions</label>
          </td>
        </tr>

        {# unseeded torrent alerts #}
        <tr id="notif_unseeded_tr">
          <th>Unseeded torrent alerts</th>

          <td>
            <input type="checkbox" name="unseededalerts" id="unseededalerts" <?=checked($UnseededAlerts)?> />
            <label for="unseededalerts">Enable unseeded torrent alerts</label>
          </td>
        </tr>
        <?php NotificationsManagerView::render_settings(NotificationsManager::get_settings($UserID)); ?>
      </table>





      {# profile #}
      <h3>Profile</h3>
      <table class="layout border user_options" id="profile_settings">

        {# avatar uri #}
        <tr id="pers_avatar_tr">
          <th>Avatar URL</th>

          <td>
            <input type="text" size="50" name="avatar" id="avatar"
              value="{{ user.extra.Avatar }}" />
          </td>
        </tr>

{# STUPID
        <!-- Second avatar URL -->
        <?php if ($HasSecondAvatar) { ?>
        <tr id="pers_avatar2_tr">
          <td class="label">
            <strong>Second avatar URL</strong>
          </td>

          <td>
            <input type="text" size="50" name="second_avatar" id="second_avatar"
              value="<?=$Rewards['SecondAvatar']?>" />
          </td>
        </tr>
        <?php }
#}

{# STUPID
# Avatar mouseover text
  if ($HasAvatarMouseOverText) { ?>
        <tr id="pers_avatarhover_tr">
          <td class="label">
            <strong>Avatar mouseover text</strong>
          </td>

          <td>
            <input type="text" size="50" name="avatar_mouse_over_text" id="avatar_mouse_over_text"
              value="<?=$Rewards['AvatarMouseOverText']?>" />
          </td>
        </tr>
        <?php }
#}

{# STUPID
# Donor icon mouseover text
  if ($HasDonorIconMouseOverText) { ?>
        <tr id="pers_donorhover_tr">
          <td class="label">
            <strong>Donor icon mouseover text</strong>
          </td>

          <td>
            <input type="text" size="50" name="donor_icon_mouse_over_text" id="donor_icon_mouse_over_text"
              value="<?=$Rewards['IconMouseOverText']?>" />
          </td>
        </tr>
        <?php }
#}

{# FUCK THIS
# Donor icon link
  if ($HasDonorIconLink) { ?>
        <tr id="pers_donorlink_tr">
          <td class="label">
            <strong>Donor icon link</strong>
          </td>

          <td>
            <input type="text" size="50" name="donor_icon_link" id="donor_icon_link"
              value="<?=$Rewards['CustomIconLink']?>" />
          </td>
        </tr>
        <?php }
#}

{# JUST USE A HEART
# Custom donor icon URL
  if ($HasCustomDonorIcon) { ?>
        <tr id="pers_donoricon_tr">
          <td class="label">
            <strong>Custom donor icon URL</strong>
          </td>

          <td>
            <input type="text" size="50" name="donor_icon_custom_url" id="donor_icon_custom_url"
              value="<?=$Rewards['CustomIcon']?>" />
          </td>
        </tr>
        <?php } ?>
#}


        {# profile title #}
        <tr id="pers_proftitle_tr">
          <th>Profile title</th>

          <td>
            <input type="text" size="50" name="profile_title" id="profile_title" value="{{ user.extra.InfoTitle }}" />
          </td>
        </tr>

        {# profile content #}
        <tr id="pers_profinfo_tr">
          <th>Profile content</th>
          </td>

          <td>
          {% set variables = {"id": "info", "name": "info", "placeholder": "What are you passionate about?", "value": user.extra.Info} %}
            {% include "_base/textarea.twig" with variables %}
          </td>
        </tr>
      </table>



{# PARANOIA TODO: THIS WHOLE SECTION IS FUCKED UP

      <!-- Paranoia -->
      <table cellpadding="6" cellspacing="1" border="0" width="100%" class="layout border user_options"
        id="paranoia_settings">
        <tr class="colhead_dark">
          <td colspan="2">
            <strong>Paranoia</strong>
          </td>
        </tr>

        <tr>
          <td class="label">&nbsp;</td>
          <td>
            <p>
              <strong>Select the profile elements you wish to display to other users.</strong>
            </p>

            <p>
              For example, if you select "Show count" for "Requests (filled)," the number of requests you have filled
              will be visible.
              If you select "Show bounty," the amount of request bounty you have received will be visible.
              If you select "Show list," the full list of requests you have filled will be visible.
            </p>

            <p>
              <span class="warning">
                Note: Paranoia has nothing to do with your security on this site.
                These settings only determine if others can view your site activity.
                Some information will remain available in the site log.
              </span>
            </p>
          </td>
        </tr>

        <!-- Recent activity -->
        <tr id="para_lastseen_tr">
          <td class="label">
            <strong>Recent activity</strong>
          </td>

          <td>
            <label>
              <input type="checkbox" name="p_lastseen" <?=checked(!in_array('lastseen', $Paranoia))?>
              />
              Last seen
            </label>
          </td>
        </tr>

        <!-- Presets -->
        <tr id="para_presets_tr">
          <td class="label">
            <strong>Presets</strong>
          </td>

          <td>
            <input type="button" onclick="ParanoiaResetOff();" value="Everything" />
            <input type="button" onclick="ParanoiaResetStats();" value="Stats Only" />
            <input type="button" onclick="ParanoiaResetOn();" value="Nothing" />
          </td>
        </tr>


        <!-- Statistics -->
        <tr id="para_stats_tr">
          <td class="label">
            <strong>Statistics</strong>
          </td>

          <td>
            <?php
$UploadChecked = checked(!in_array('uploaded', $Paranoia));
$DownloadChecked = checked(!in_array('downloaded', $Paranoia));
$RatioChecked = checked(!in_array('ratio', $Paranoia));
?>

            <label><input type="checkbox" name="p_uploaded" onchange="AlterParanoia();" <?=$UploadChecked?> /> Uploaded</label>&ensp;
            <label><input type="checkbox" name="p_downloaded" onchange="AlterParanoia();" <?=$DownloadChecked?> /> Downloaded</label>&ensp;
            <label><input type="checkbox" name="p_ratio" onchange="AlterParanoia();" <?=$RatioChecked?> /> Ratio</label>
          </td>
        </tr>

        <!-- Required Ratio -->
        <tr id="para_reqratio_tr">
          <td class="label">
            <strong>Required Ratio</strong>
          </td>

          <td>
            <label>
              <input type="checkbox" name="p_requiredratio" <?=checked(!in_array('requiredratio', $Paranoia))?>
              /> Required Ratio
            </label>
          </td>
        </tr>

        <!-- Comments (torrents) -->
        <tr id="para_comments_tr">
          <td class="label">
            <strong>Comments (torrents)</strong>
          </td>

          <td>
            <?php display_paranoia('torrentcomments'); ?>
          </td>
        </tr>

        <!-- Collections (started) -->
        <tr id="para_collstart_tr">
          <td class="label">
            <strong>Collections (started)</strong>
          </td>

          <td>
            <?php display_paranoia('collages'); ?>
          </td>
        </tr>

        <!-- Collections (contributed to) -->
        <tr id="para_collcontr_tr">
          <td class="label">
            <strong>Collections (contributed to)</strong>
          </td>

          <td>
            <?php display_paranoia('collagecontribs'); ?>
          </td>
        </tr>

        <!-- Requests (filled) -->
        <tr id="para_reqfill_tr">
          <td class="label">
            <strong>Requests (filled)</strong>
          </td>

          <td>
            <?php
$RequestsFilledCountChecked = checked(!in_array('requestsfilled_count', $Paranoia));
$RequestsFilledBountyChecked = checked(!in_array('requestsfilled_bounty', $Paranoia));
$RequestsFilledListChecked = checked(!in_array('requestsfilled_list', $Paranoia));
?>

            <label><input type="checkbox" name="p_requestsfilled_count" onchange="AlterParanoia();" <?=$RequestsFilledCountChecked?> /> Show
              count</label>&nbsp;
            <label><input type="checkbox" name="p_requestsfilled_bounty" onchange="AlterParanoia();" <?=$RequestsFilledBountyChecked?> /> Show
              bounty</label>&nbsp;
            <label><input type="checkbox" name="p_requestsfilled_list" onchange="AlterParanoia();" <?=$RequestsFilledListChecked?> /> Show list</label>
          </td>
        </tr>

        <!-- Requests (voted for) -->
        <tr id="para_reqvote_tr">
          <td class="label">
            <strong>Requests (voted for)</strong>
          </td>

          <td>
            <?php
$RequestsVotedCountChecked = checked(!in_array('requestsvoted_count', $Paranoia));
$RequestsVotedBountyChecked = checked(!in_array('requestsvoted_bounty', $Paranoia));
$RequestsVotedListChecked = checked(!in_array('requestsvoted_list', $Paranoia));
?>

            <label><input type="checkbox" name="p_requestsvoted_count" onchange="AlterParanoia();" <?=$RequestsVotedCountChecked?> /> Show
              count</label>&nbsp;
            <label><input type="checkbox" name="p_requestsvoted_bounty" onchange="AlterParanoia();" <?=$RequestsVotedBountyChecked?> /> Show
              bounty</label>&nbsp;
            <label><input type="checkbox" name="p_requestsvoted_list" onchange="AlterParanoia();" <?=$RequestsVotedListChecked?> /> Show list</label>
          </td>
        </tr>

        <!-- Uploaded torrents -->
        <tr id="para_upltor_tr">
          <td class="label">
            <strong>Uploaded torrents</strong>
          </td>

          <td>
            <?php display_paranoia('uploads'); ?>
          </td>
        </tr>

        <!-- Uploaded torrents (unique groups) -->
        <tr id="para_uplunique_tr">
          <td class="label">
            <strong>Uploaded torrents (unique groups)</strong>
          </td>

          <td>
            <?php display_paranoia('uniquegroups'); ?>
          </td>
        </tr>

        <!-- Torrents (seeding) -->
        <tr id="para_torseed_tr">
          <td class="label">
            <strong>Torrents (seeding)</strong>
          </td>

          <td>
            <?php display_paranoia('seeding'); ?>
          </td>
        </tr>

        <!-- Torrents (leeching) -->
        <tr id="para_torleech_tr">
          <td class="label">
            <strong>Torrents (leeching)</strong>
          </td>

          <td>
            <?php display_paranoia('leeching'); ?>
          </td>
        </tr>

        <!-- Torrents (snatched) -->
        <tr id="para_torsnatch_tr">
          <td class="label">
            <strong>Torrents (snatched)</strong>
          </td>

          <td>
            <?php display_paranoia('snatched'); ?>
          </td>
        </tr>

        <!-- Torrents (upload subscriptions) -->
        <tr id="para_torsubscr_tr">
          <td class="label tooltip" title="Can others subscribe to your uploads?">
            <strong>Torrents (upload subscriptions)</strong>
          </td>

          <td>
            <label>
              <input type="checkbox" name="p_notifications" <?=checked(!in_array('notifications', $Paranoia))?>
              /> Allow torrent upload subscriptions
            </label>
          </td>
        </tr>

        <?php
$app->dbOld->query("
  SELECT COUNT(UserID)
  FROM users_info
  WHERE Inviter = ?", $UserID);
list($Invited) = $app->dbOld->next_record();
?>

        <!-- Invitees -->
        <tr id="para_invited_tr">
          <td class="label">
            <strong>Invitees</strong>
          </td>

          <td>
            <label>
              <input type="checkbox" name="p_invitedcount" <?=checked(!in_array('invitedcount', $Paranoia))?>
              /> Show count
            </label>
          </td>
        </tr>

        <?php
$app->dbOld->query("
  SELECT COUNT(ArtistID)
  FROM torrents_artists
  WHERE UserID = ?", $UserID);
list($ArtistsAdded) = $app->dbOld->next_record();
?>

        <!-- Artists added -->
        <tr id="para_artistsadded_tr">
          <td class="label">
            <strong>Artists added</strong>
          </td>

          <td>
            <label>
              <input type="checkbox" name="p_artistsadded" <?=checked(!in_array('artistsadded', $Paranoia))?>
              /> Show count
            </label>
          </td>
        </tr>

        <!-- Preview paranoia -->
        <tr id="para_preview_tr">
          <td></td>
          <td><a href="#" id="preview_paranoia" class="brackets">Preview paranoia</a></td>
        </tr>
      </table>

END PARANOIA CLUSTERFUCK #}



{# security #}
<h3>Security</h3>
      <!-- Security -->
      <table class="layout border user_options" id="security_settings">

        <!-- 2FA, U2F, and PGP -->
        <tr id="acc_2fa_tr">
          <td class="label">
            <strong>2FA, U2F, and PGP</strong>
          </td>

          <td>
            <a href="user.php?action=2fa">Click here to view additional account security options</a>
          </td>
        </tr>

        <!-- Current password -->
        <tr id="acc_currentpassword_tr">
          <td class="label">
            <strong>Current password</strong>
          </td>

          <td>
            <div>
              <input type="password" size="40" name="cur_pass" id="cur_pass" maxlength="307200" value="" />
            </div>

            <strong class="important_text">
              When changing any of the settings below, you must enter your current password here
            </strong>
          </td>
        </tr>

        <tr id="acc_resetpk_tr">
          <td class="label">
            <strong>Reset passkey</strong>
          </td>

          <td>
            <div>
              <label>
                <input type="checkbox" name="resetpasskey" id="resetpasskey" />
                Reset your passkey?
              </label>
            </div>

            <p class="setting_description">
              Any active torrents must be downloaded again to continue leeching/seeding
            </p>
          </td>
        </tr>

        <!-- IRC key -->
        <tr id="acc_irckey_tr">
          <td class="label">
            <strong>IRC key</strong>
          </td>

          <td>
            <div>
              <input type="text" size="50" name="irckey" id="irckey"
                value="<?=Text::esc($IRCKey)?>" />
            </div>

            <p class="setting_description">
              This key will be used when authenticating with <?=BOT_NICK?> on the
              <a href="wiki.php?action=article&name=IRC">IRC network</a>.

            <ul>
              <li>This value is stored in plaintext and should not be your password</li>
              <li>IRC keys must be between 6 and 32 characters</li>
            </ul>
          </td>
        </tr>


        <!-- API keys -->
        <tr id="acc_api_keys_tr">
          <td class="label">
            <strong>API Keys</strong>
          </td>

          <td>
            <p>
              API keys can be generated to access our
              <a href="https://docs.biotorrents.de" target="_blank">JSON API</a>.
              Please rememeber to revoke tokens you no longer use.
            </p>

            <p>
              <strong class="important_text">
                Treat your tokens like passwords and keep them secret.
              </strong>
            </p>

            <table class="api_keys">
              <tr class="colhead">
                <th>Name</th>
                <th>Created</th>
                <th>Revoke</th>
              </tr>

              <?php
              $app->dbOld->query("
              SELECT
                `ID`,
                `Name`,
                `Token`,
                `Created`
              FROM
                `api_user_tokens`
              WHERE
                `UserID` = '$UserID'
                AND `Revoked` = '0'
              ORDER BY
                `Created`
                DESC
              ");

              foreach ($app->dbOld->to_array(false, MYSQLI_ASSOC, false) as $row) { ?>
              <tr>
                <td>
                  <?= $row['Name'] ?>
                </td>

                <td>
                  <?= time_diff($row['Created']) ?>
                </td>

                <td style='text-align: center'>
                  <a
                    href='user.php?action=token&amp;do=revoke&amp;user_id=<?=$user['ID'] ?>&amp;token_id=<?= $row['ID'] ?>'>Revoke</a>
              </tr>
              <?php
              } /* foreach */ ?>
            </table>

            <p>
              <a
                href='user.php?action=token&amp;user_id=<?= $user['ID'] ?>'>Click
                here to create a new token</a>
            </p>
          </td>
        </tr>


        <!-- Email address -->
        <tr id="acc_email_tr">
          <td class="label">
            <strong>Email address</strong>
          </td>

          <td>
            <div>
              <input type="email" size="50" name="email" id="email"
                value="<?=Text::esc($Email)?>" />
            </div>
          </td>
        </tr>

        <!-- Password -->
        <tr id="acc_password_tr">
          <td class="label">
            <strong>Password</strong>
          </td>

          <td>
            <div>
              <label>
                <input type="password" minlength="15" size="40" name="new_pass_1" id="new_pass_1" maxlength="307200"
                  value="" placeholder="New password" />
                <strong id="pass_strength"></strong>
              </label>
            </div>

            <div>
              <label>
                <input type="password" minlength="15" size="40" name="new_pass_2" id="new_pass_2" maxlength="307200"
                  value="" placeholder="Confirm new password" />
                <strong id="pass_match"></strong>
              </label>
            </div>

            <div>
              <textarea id="password_display" name="password_display" rows="2" cols="50" onclick="this.select();"
                readonly></textarea>
              <button type="button" id="password_create" onclick="pwgen('password_display');">Generate</button>
            </div>

            <p class="setting_description">
            </p>
          </td>
        </tr>
      </table>





















{#




    </div>
  </form>
</div>
#}

{% endblock %}


{% block sidebar %}

{{ include("user/sidebar.twig") }}

{% endblock %}











<?php
declare(strict_types=1);

$ENV = ENV::go();

$TwoFA = new RobThree\Auth\TwoFactorAuth($ENV->siteName);
$U2F = new \u2flib_server\U2F("https://$ENV->siteDomain");

if ($Type = $_POST['type'] ?? false) {
    if ($Type === 'PGP') {
        if (!empty($_POST['publickey']) && (strpos($_POST['publickey'], 'BEGIN PGP PUBLIC KEY BLOCK') === false || strpos($_POST['publickey'], 'END PGP PUBLIC KEY BLOCK') === false)) {
            $Error = "Invalid PGP public key";
        } else {
            $db->query("
              UPDATE users_main
              SET PublicKey = '".db_string($_POST['publickey'])."'
              WHERE ID = $UserID");
            $Message = 'Public key '.(empty($_POST['publickey']) ? 'removed' : 'updated') ;
        }
    }

    if ($Type === '2FA-E') {
        if ($TwoFA->verifyCode($_POST['twofasecret'], $_POST['twofa'])) {
            $db->query("
              UPDATE users_main
              SET TwoFactor='".db_string($_POST['twofasecret'])."'
              WHERE ID = $UserID");
            $Message = "Two Factor Authentication enabled";
        } else {
            $Error = "Invalid 2FA verification code";
        }
    }

    if ($Type === '2FA-D') {
        $db->query("
          UPDATE users_main
          SET TwoFactor = NULL
          WHERE ID = $UserID");
        $Message = "Two Factor Authentication disabled";
    }

    if ($Type === 'U2F-E') {
        try {
            $U2FReg = $U2F->doRegister(json_decode($_POST['u2f-request']), json_decode($_POST['u2f-response']));
            $db->query("
              INSERT INTO u2f
                (UserID, KeyHandle, PublicKey, Certificate, Counter, Valid)
              Values ($UserID, '".db_string($U2FReg->keyHandle)."', '".db_string($U2FReg->publicKey)."', '".db_string($U2FReg->certificate)."', '".db_string($U2FReg->counter)."', '1')");
            $Message = "U2F token registered";
        } catch (Exception $e) {
            $Error = "Failed to register U2F token";
        }
    }

    if ($Type === 'U2F-D') {
        $db->query("
          DELETE FROM u2f
          WHERE UserID = $UserID");
        $Message = 'U2F tokens deregistered';
    }
}

$U2FRegs = [];
$db->query("
  SELECT KeyHandle, PublicKey, Certificate, Counter
  FROM u2f
  WHERE UserID = $UserID");

// Needs to be an array of objects, so we can't use to_array()
while (list($KeyHandle, $PublicKey, $Certificate, $Counter) = $db->next_record()) {
    $U2FRegs[] = (object)['keyHandle'=>$KeyHandle, 'publicKey'=>$PublicKey, 'certificate'=>$Certificate, 'counter'=>$Counter];
}

$db->query("
  SELECT PublicKey, TwoFactor
  FROM users_main
  WHERE ID = $UserID");

list($PublicKey, $TwoFactor) = $db->next_record();
list($U2FRequest, $U2FSigs) = $U2F->getRegisterData($U2FRegs);
View::header("2FA Settings", 'u2f');
?>

<h2>Additional Account Security Options</h2>
<div>
  <?php if (isset($Message)) { ?>
  <div class="alertbar"><?=$Message?>
  </div>
  <?php }

   if (isset($Error)) { ?>
  <div class="alertbar error"><?=$Error?>
  </div>
  <?php } ?>

  <div class="box">
    <div class="head">
      <strong>PGP Public Key</strong>
    </div>

    <div class="pad">
      <?php if (empty($PublicKey)) {
       if (!empty($TwoFactor) || sizeof($U2FRegs) > 0) { ?>
      <strong class="important_text">
        You have a form of 2FA enabled but no PGP key associated with your account.
        If you lose access to your 2FA device, you will permanently lose access to your account.
      </strong>
      <?php } ?>

      <p>
        When setting up any form of second factor authentication, it is strongly recommended that you add your PGP
        public key as a form of secure recovery in the event that you lose access to your second factor device.
      </p>

      <p>
        After adding a PGP public key to your account, you will be able to disable your account's second factor
        protection by solving a challenge that only someone with your private key could solve.
      </p>

      <p>
        Additionally, being able to solve such a challenge when given manually by staff will suffice to provide proof of
        ownership of your account, provided no revocation certificate has been published for your key.
      </p>

      <p>
        Before adding your PGP public key, please make sure that you have taken the necessary precautions to protect it
        from loss (backup) or theft (revocation certificate).
      </p>
      <?php
   } else { ?>
      <p>
        The PGP public key associated with your account is shown below.
      </p>

      <p>
        This key can be used to create challenges that are only solvable by the holder of the related private key.
        Successfully solving these challenges is necessary for disabling any form of second factor authentication or
        proving ownership of this account to staff when you are unable to login.
      </p>
      <?php } ?>

      <form method="post">
        <input type="hidden" name="type" value="PGP">
        Public Key
        <br />

        <textarea name="publickey" id="publickey" spellcheck="false" cols="64"
          rows="8"><?=Text::esc($PublicKey)?></textarea>
        <br />

        <button type="submit" name="type" value="PGP">Update Public Key</button>
      </form>
    </div>
  </div>

  <div class="box">
    <div class="head">
      <strong>Two-Factor Authentication (2FA-TOTP)</strong>
    </div>

    <div class="pad">
      <?php $TwoFASecret = empty($TwoFactor) ? $TwoFA->createSecret() : $TwoFactor;
      if (empty($TwoFactor)) {
          if (sizeof($U2FRegs) === 0) { ?>
      <p>
        Two Factor Authentication is not currently enabled for this account.
        To enable it, add the secret key below to your 2FA client either manually or by scanning the QR code, then enter
        a verification code generated by your 2FA client and click the "Enable 2FA" button.
      </p>

      <form method="post">
        <input type="text" size="60" name="twofasecret" id="twofasecret"
          value="<?=$TwoFASecret?>" readonly><br>
        <img
          src="<?=$TwoFA->getQRCodeImageAsDataUri($ENV->siteName.':'.$user['Username'], $TwoFASecret)?>" />
        <br />

        <input type="text" size="20" maxlength="6" pattern="[0-9]{0,6}" name="twofa" id="twofa"
          placeholder="Verification Code" autocomplete="off">
        <br /><br />

        <button type="submit" name="type" value="2FA-E">Enable 2FA</button>
      </form>

      <?php } else { ?>
      <p>
        Two Factor Authentication is not currently enabled for this account.
        To enable 2FA, you must first disable U2F below.
      </p>
      <?php }
      } else {?>
      <form method="post">
        <input type="hidden" name="type" value="2FA-D">
        <p>
          2FA is enabled for this account with the following secret:
        </p>

        <p>
          <input type="text" size="50" name="twofasecret" id="twofasecret"
            value="<?=$TwoFASecret?>" onclick="this.select()"
            readonly />
        </p>

        <p>
          <img
            src="<?=$TwoFA->getQRCodeImageAsDataUri($ENV->siteName.':'.$user['Username'], $TwoFASecret)?>" />
        </p>

        <p>
          To disable 2FA, click the button below.
        </p>

        <button type="submit" name="type" value="2FA-D">Disable 2FA</button>
      </form>
      <?php } ?>
    </div>
  </div>

  <div class="box">
    <div class="head">
      <strong>Universal Two Factor (FIDO U2F)</strong>
    </div>

    <div class="pad">
      <?php if (sizeof($U2FRegs) === 0) { ?>
      <?php if (empty($TwoFactor)) { ?>
      <form method="post" id="u2f_register_form">
        <input type="hidden" name="u2f-request"
          value='<?=json_encode($U2FRequest)?>' />

        <input type="hidden" name="u2f-sigs"
          value='<?=json_encode($U2FSigs)?>' />

        <input type="hidden" name="u2f-response" />

        <input type="hidden" value="U2F-E" />
      </form>

      <p>
        Universal Two Factor is not currently enabled for this account.
        To enable Universal Two Factor, plug in your U2F token and press the button on it.
      </p>

      <?php } else { ?>
      <p>
        Universal Two Factor is not currently enabled for this account.
        To enable Universal Two Factor, you must first disable normal 2FA above.
      </p>
      <?php } ?>

      <?php } else { ?>
      <form method="post" id="u2f_register_form">
        <input type="hidden" name="u2f-request"
          value='<?=json_encode($U2FRequest)?>' />

        <input type="hidden" name="u2f-sigs"
          value='<?=json_encode($U2FSigs)?>' />

        <input type="hidden" name="u2f-response" />

        <input type="hidden" value="U2F-E" />

        <p>
          Universal Two Factor is enabled.
          To add an additional U2F token, plug it in and press the button on it.
          To disable U2F completely and deregister all tokens, press the button below.
        </p>
        <button type="submit" name="type" value="U2F-D">Disable U2F</button>
      </form>
      <?php } ?>
    </div>
  </div>
</div>
<?php
View::footer();
