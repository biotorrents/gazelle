/**
 * icons
 *
 * all default sitewide icons:
 *  - category icons,
 *  - forum icons, and
 *  - badge styles
 */

$posts: "/images/forums/";
$nrcc: no-repeat center center;

@mixin bioIcons($emoji) {
  content: $emoji;
  font-size: xx-large;
}


/**
 * category icons
 */

.cats_sequences::before {
  @include bioIcons("🧬");
}

.cats_graphs::before {
  @include bioIcons("📈");
}

.cats_systems::before {
  @include bioIcons("🌐");
}

.cats_geometric::before {
  @include bioIcons("💠");
}

.cats_scalars\/vectors::before {
  @include bioIcons("⏱️");
}

.cats_patterns::before {
  @include bioIcons("❄️");
}

.cats_constraints::before {
  @include bioIcons("⚙️");
}

.cats_images::before {
  @include bioIcons("🔬");
}

.cats_spatial::before {
  @include bioIcons("🗺️");
}

.cats_models::before {
  @include bioIcons("🏗️");
}

.cats_documents::before {
  @include bioIcons("📓");
}

.cats_machinedata::before {
  @include bioIcons("📡");
}

/* related to browse page? */
#cat-selector ul {
  width: 100%;
}

#cat-selector ul li {
  display: inline;
}

/* shown on torrent details header table */
img.torrent_header {
  width: 1.2rem;
  height: 1.2rem;
  background-size: 1.2rem 1.2rem;
  display: inline-block;
}


/**
 * forum icons
 */

.unread {
  background: url($posts + "unread.png") $nrcc;
}

.read {
  background: url($posts + "read.png") $nrcc;
}

.unread_locked {
  background: url($posts + "locked_unread.png") $nrcc;
}

.read_locked {
  background: url($posts + "locked_read.png") $nrcc;
}

.read_sticky {
  background: url($posts + "sticky_read.png") $nrcc;
}

.unread_sticky {
  background: url($posts + "sticky_unread.png") $nrcc;
}

.unread_locked_sticky {
  background: url($posts + "locked_sticky_unread.png") $nrcc;
}

.read_locked_sticky {
  background: url($posts + "locked_sticky_read.png") $nrcc;
}


/**
 * torrent table icons
 */

/* torrent group icons */
.subjectObject {
  &:before {
    content: "🦠";
    margin-right: 0.5rem;
  }
}

.year {
  &:before {
    content: "📅";
    margin-right: 0.5rem;
  }
}

.identifier {
  &:before {
    content: "🔑";
    margin-right: 0.5rem;
  }
}

.workgroup {
  &:before {
    content: "🏫";
    margin-right: 0.5rem;
  }
}

.location {
  &:before {
    content: "📍";
    margin-right: 0.5rem;
  }
}

.tagList {
  &:before {
    content: "#️";
    margin-right: 0.5rem;
  }
}

.creatorList {
  &:before {
    content: "🧑‍🔬";
    margin-right: 0.5rem;
  }
}

/* torrent icons */
.platform {
  &:before {
    content: "📦";
    margin-right: 0.5rem;
  }
}

.format {
  &:before {
    content: "💾";
    margin-right: 0.5rem;
  }
}

.version {
  &:before {
    content: "";
    margin-right: 0.5rem;

    background-image: url("/images/icons/version.webp");
    background-size: 100% 100%;
    display: inline-block;

    width: 1.5rem;
    height: 1.5rem;
  }
}

.scope {
  &:before {
    content: "🔎";
    margin-right: 0.5rem;
  }
}

.archive {
  &:before {
    content: "";
    margin-right: 0.5rem;

    background-image: url("/images/icons/archive.webp");
    background-size: 100% 100%;
    display: inline-block;

    width: 1.5rem;
    height: 1.5rem;
  }
}

.license {
  &:before {
    content: "📜";
    margin-right: 0.5rem;
  }
}


/**
 * collages
 */

.locked {
  &:before {
    content: "🔒";
    margin-right: 0.5rem;
  }
}


/**
 * badges
 */

span.badges {
  display: flex;
  flex-flow: row wrap;
  gap: 1.5rem;
  user-select: none;
}

.badge,
.icon {
  max-width: 1.5rem;
  max-height: 1.5rem;
  user-select: none;
}

/* donor */
.donor {
  &:after {
    content: "❤️";
    margin-left: 0.5rem;
  }
}

/* warned */
.warned {
  &:after {
    content: "⚠️";
    margin-left: 0.5rem;
  }
}

/* banned */
.banned {
  &:after {
    content: "🚫";
    margin-left: 0.5rem;
  }
}


/**
 * loading spinner element
 * https://css-tricks.com/single-element-loaders-the-spinner/
 */

/* dark */
.loaderDark {
  width: 1rem;
  aspect-ratio: 1;
  display: inline-grid;
  -webkit-mask: conic-gradient(from 22deg, #0003, #000);
  mask: conic-gradient(from 22deg, #0003, #000);
  animation: load 1s steps(8) infinite;
  margin: 0 0.5rem;
}

.loaderDark,
.loaderDark:before {
  --_g: linear-gradient(#222 0 0) 50%;
  background: var(--_g) / 34% 8% space no-repeat,
    var(--_g) / 8% 34% no-repeat space;
}

.loaderDark:before {
  content: "";
  transform: rotate(45deg);
}

@keyframes load {
  from {
    transform: rotate(0turn);
  }

  to {
    transform: rotate(1turn);
  }
}

/* light */
.loaderLight {
  width: 1rem;
  aspect-ratio: 1;
  display: inline-grid;
  -webkit-mask: conic-gradient(from 22deg, #0003, #000);
  mask: conic-gradient(from 22deg, #0003, #000);
  animation: load 1s steps(8) infinite;
  margin: 0 0.5rem;
}

.loaderLight,
.loaderLight:before {
  --_g: linear-gradient(white 0 0) 50%;
  background: var(--_g) / 34% 8% space no-repeat,
    var(--_g) / 8% 34% no-repeat space;
}

.loaderLight:before {
  content: "";
  transform: rotate(45deg);
}

@keyframes load {
  from {
    transform: rotate(0turn);
  }

  to {
    transform: rotate(1turn);
  }
}


/**
 * snowflake profile effect
 *
 * https://pajasevi.github.io/CSSnowflakes/
 */

.snowflake {
  font-size: 2vw;
  text-shadow: 0.1rem 0.1rem whitesmoke;
}

/* https://gist.githubusercontent.com/pajasevi/0c50b0b95795debd6c1e/raw/7681f4feb747c7fa0d44da782a5cfbb5b9ed7207/snowflake-snippet */

@-webkit-keyframes snowflakes-fall {
  0% {
    top: -10%
  }

  100% {
    top: 100%
  }
}

@-webkit-keyframes snowflakes-shake {

  0%,
  100% {
    -webkit-transform: translateX(0);
    transform: translateX(0)
  }

  50% {
    -webkit-transform: translateX(80px);
    transform: translateX(80px)
  }
}

@keyframes snowflakes-fall {
  0% {
    top: -10%
  }

  100% {
    top: 100%
  }
}

@keyframes snowflakes-shake {

  0%,
  100% {
    transform: translateX(0)
  }

  50% {
    transform: translateX(80px)
  }
}

.snowflake {
  position: fixed;
  top: -10%;
  z-index: 9999;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: default;
  -webkit-animation-name: snowflakes-fall, snowflakes-shake;
  -webkit-animation-duration: 10s, 3s;
  -webkit-animation-timing-function: linear, ease-in-out;
  -webkit-animation-iteration-count: infinite, infinite;
  -webkit-animation-play-state: running, running;
  animation-name: snowflakes-fall, snowflakes-shake;
  animation-duration: 10s, 3s;
  animation-timing-function: linear, ease-in-out;
  animation-iteration-count: infinite, infinite;
  animation-play-state: running, running
}

.snowflake:nth-of-type(0) {
  left: 1%;
  -webkit-animation-delay: 0s, 0s;
  animation-delay: 0s, 0s
}

.snowflake:nth-of-type(1) {
  left: 10%;
  -webkit-animation-delay: 1s, 1s;
  animation-delay: 1s, 1s
}

.snowflake:nth-of-type(2) {
  left: 20%;
  -webkit-animation-delay: 6s, .5s;
  animation-delay: 6s, .5s
}

.snowflake:nth-of-type(3) {
  left: 30%;
  -webkit-animation-delay: 4s, 2s;
  animation-delay: 4s, 2s
}

.snowflake:nth-of-type(4) {
  left: 40%;
  -webkit-animation-delay: 2s, 2s;
  animation-delay: 2s, 2s
}

.snowflake:nth-of-type(5) {
  left: 50%;
  -webkit-animation-delay: 8s, 3s;
  animation-delay: 8s, 3s
}

.snowflake:nth-of-type(6) {
  left: 60%;
  -webkit-animation-delay: 6s, 2s;
  animation-delay: 6s, 2s
}

.snowflake:nth-of-type(7) {
  left: 70%;
  -webkit-animation-delay: 2.5s, 1s;
  animation-delay: 2.5s, 1s
}

.snowflake:nth-of-type(8) {
  left: 80%;
  -webkit-animation-delay: 1s, 0s;
  animation-delay: 1s, 0s
}

.snowflake:nth-of-type(9) {
  left: 90%;
  -webkit-animation-delay: 3s, 1.5s;
  animation-delay: 3s, 1.5s
}

.snowflake:nth-of-type(10) {
  left: 25%;
  -webkit-animation-delay: 2s, 0s;
  animation-delay: 2s, 0s
}

.snowflake:nth-of-type(11) {
  left: 65%;
  -webkit-animation-delay: 4s, 2.5s;
  animation-delay: 4s, 2.5s
}

/* https://gist.githubusercontent.com/pajasevi/0c50b0b95795debd6c1e/raw/7681f4feb747c7fa0d44da782a5cfbb5b9ed7207/snowflake-snippet */


/**
 * glitch text effect
 *
 * usage: <span class="glitch" data-text="foo">foo</span>
 *
 * @see https://blog.avada.io/css/text-glitch-effects
 */

/* https://codepen.io/mondo-iwanow/pen/xoxvgE */

$primaryColor: #222;
$secondaryColor: white;
$steps: 20;

.glitch {
  position: relative;
  color: $primaryColor;
  transform: scale3d(1, 1, 1);

  &::before,
  &::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    overflow: hidden;
    background: $secondaryColor;
    color: $primaryColor;
    clip: rect(0, 900px, 0, 0);
  }

  &::before {
    left: 7px;
    text-shadow: 1px 5 green;
    animation: glitch-effect 3s infinite linear alternate-reverse;
  }

  &::after {
    left: 3px;
    text-shadow: -1px 0 red;
    animation: glitch-effect 2s infinite linear alternate-reverse;
  }
}

@keyframes glitch-effect {

  @for $i from 0 through $steps {
    #{percentage($i*calc(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
    }
  }

}

/* https://codepen.io/mondo-iwanow/pen/xoxvgE */


/**
 * another glitch to adapt:
 * https://codepen.io/fabiowallner/pen/ozZoYo
 */